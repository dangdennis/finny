# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose run migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.8'

volumes:
  db_data:
  timescale-data: # Defines the volume for storing database data

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_HOST: db
  DATABASE_NAME: postgres
  DATABASE_USERNAME: postgres
  DATABASE_PASSWORD: postgres
  
services:
  # timescaledb:
  #   image: timescale/timescaledb:latest-pg14
  #   container_name: timescaledb
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_PASSWORD: postgres # Set a secure password
  #     POSTGRES_USER: postgres                # Default is 'postgres' if not set
  #     POSTGRES_DB: postgres              # Default is the user name if not set
  #   ports:
  #     - "5432:5432" # Exposes TimescaleDB on port 5432 on your local machine
  #   volumes:
      # - timescale-data:/var/lib/postgresql/data # Persists data across container restarts


  # app:
  #   image: backend:latest
  #   build:
  #     context: .
  #   environment:
  #     <<: *shared_environment
  #   depends_on:
  #     - timescaledb
  #   ports:
  #     - '8080:8080'
  #   # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
  #   command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
  # migrate:
  #   image: backend:latest
  #   build:
  #     context: .
  #   environment:
  #     <<: *shared_environment
  #   depends_on:
  #     - timescaledb
  #   command: ["migrate", "--yes"]
  #   deploy:
  #     replicas: 0
  # revert:
  #   image: backend:latest
  #   build:
  #     context: .
  #   environment:
  #     <<: *shared_environment
  #   depends_on:
  #     - timescaledb
  #   command: ["migrate", "--revert", "--yes"]
  #   deploy:
  #     replicas: 0
  db:
    image: postgres:16-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
